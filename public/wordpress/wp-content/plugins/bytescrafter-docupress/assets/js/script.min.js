! function (e) {
    var n = {};

    function t(s) {
        if (n[s]) return n[s].exports;
        var o = n[s] = {
            i: s,
            l: !1,
            exports: {}
        };
        return e[s].call(o.exports, o, o.exports, t), o.l = !0, o.exports
    }
    t.m = e, t.c = n, t.d = function (e, n, s) {
        t.o(e, n) || Object.defineProperty(e, n, {
            enumerable: !0,
            get: s
        })
    }, t.r = function (e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, t.t = function (e, n) {
        if (1 & n && (e = t(e)), 8 & n) return e;
        if (4 & n && "object" == typeof e && e && e.__esModule) return e;
        var s = Object.create(null);
        if (t.r(s), Object.defineProperty(s, "default", {
                enumerable: !0,
                value: e
            }), 2 & n && "string" != typeof e)
            for (var o in e) t.d(s, o, function (n) {
                return e[n]
            }.bind(null, o));
        return s
    }, t.n = function (e) {
        var n = e && e.__esModule ? function () {
            return e.default
        } : function () {
            return e
        };
        return t.d(n, "a", n), n
    }, t.o = function (e, n) {
        return Object.prototype.hasOwnProperty.call(e, n)
    }, t.p = "", t(t.s = 0)
}([function (e, n, t) {
    e.exports = t(1)
}, function (e, n) {
    function t(e, n) {
        for (var t = 0; t < n.length; t++) {
            var s = n[t];
            s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
        }
    }
    var s = window.jQuery,
        o = function () {
            function e() {
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, e);
                this.cache = {}, this.pendingAjax = !1, this.xhrAjaxSearch = !1, this.$body = s("body"), this.$window = s(window), this.$document = s(document), this.$preloader = s('<div class="docupress-preloader"><span><span></span></span></div>'), this.$singleAjax = s(".docupress-single-ajax"), this.initSearch(), this.initAnchors(), this.initFeedbacks(), this.initAjax()
            }
            var n, o, i;
            return n = e, (o = [{
                key: "stripHash",
                value: function (e) {
                    return e.replace(/#.*/, "")
                }
            }, {
                key: "initSearch",
                value: function () {
                    var e = this,
                        n = !1;
                    e.$document.on("submit", ".docupress-search-form", (function (n) {
                        n.preventDefault(), e.prepareSearchResults(s(this))
                    })), e.$document.on("input", ".docupress-search-form", (function (t) {
                        var o = this;
                        t.preventDefault(), clearTimeout(n), n = setTimeout((function () {
                            e.prepareSearchResults(s(o))
                        }), 500)
                    }))
                }
            }, {
                key: "prepareSearchResults",
                value: function (e) {
                    var n = this;
                    n.xhrAjaxSearch && n.xhrAjaxSearch.abort(), e.find(".docupress-search-field").val() ? n.xhrAjaxSearch = s.ajax({
                        type: "GET",
                        url: e.attr("action"),
                        data: e.serialize(),
                        success: function (t) {
                            var o = s(t).find(".docupress-search-list").get(0).outerHTML;
                            e.next(".docupress-search-form-result").html(o), n.xhrAjaxSearch = !1
                        },
                        error: function (e) {
                            console.log(e), n.xhrAjaxSearch = !1
                        }
                    }) : e.next(".docupress-search-form-result").html("")
                }
            }, {
                key: "initAnchors",
                value: function () {
                    var e = !!window.AnchorJS && new window.AnchorJS;
                    e && (e.options = {
                        placement: "right",
                        visible: "hover",
                        icon: "#"
                    }, e.add(".docupress-single-content .entry-content h2, .docupress-single-content .entry-content h3, .docupress-single-content .entry-content h4"))
                }
            }, {
                key: "initFeedbacks",
                value: function () {
                    var e = this;
                    e.$body.on("click", ".docupress-single-feedback a", (function (n) {
                        e.onFeedbackClick(n, s(this))
                    })), e.$body.on("submit", ".docupress-single-feedback + .docupress-single-feedback-suggestion", (function (n) {
                        e.onFeedbackSuggestionSend(n, s(this))
                    }))
                }
            }, {
                key: "initAjax",
                value: function () {
                    var e = this;
                    e.$singleAjax.length && (e.setCache(window.location.href, {
                        href: window.location.href,
                        title: document.title,
                        doc: e.$singleAjax.html(),
                        html: document.documentElement.outerHTML
                    }), e.$singleAjax.on("click", ".docupress-nav-list a, .docupress-single-breadcrumbs a, .docupress-single-articles a, .docupress-single-adjacent-nav a, .docupress-search-form-result a", (function (n) {
                        e.onDocLinksClick(n)
                    })), e.$window.on("popstate", (function (n) {
                        e.renderDoc(n.target.location.href)
                    })))
                }
            }, {
                key: "onFeedbackClick",
                value: function (e, n) {
                    e.preventDefault();
                    var t = this;
                    if (!t.pendingAjax) {
                        t.pendingAjax = !0;
                        var o = n.closest(".docupress-single-feedback").addClass("docupress-single-feedback-loading"),
                            i = n.closest(".docupress-single-content").find(".docupress-single-feedback-suggestion"),
                            r = n.data("type"),
                            a = {
                                post_id: n.data("id"),
                                type: r,
                                action: "docupress_ajax_feedback",
                                _wpnonce: window.docupress_vars.nonce
                            };
                        o.append(t.$preloader.clone()), s.post(window.docupress_vars.ajaxurl, a, (function (e) {
                            o.html("<div>" + e.data + "</div>"), e.success && i.length && (i.show(), i.append('<input type="hidden" name="feedback_type" value="'.concat(r, '">'))), o.removeClass("docupress-single-feedback-loading"), t.pendingAjax = !1
                        }))
                    }
                }
            }, {
                key: "onFeedbackSuggestionSend",
                value: function (e, n) {
                    e.preventDefault();
                    var t = this;
                    if (!t.pendingAjax) {
                        t.pendingAjax = !0;
                        var o = n.closest(".docupress-single-feedback-suggestion").addClass("docupress-single-feedback-suggestion-loading"),
                            i = n.find("button"),
                            r = n.serializeArray().reduce((function (e, n) {
                                return e[n.name] = n.value, e
                            }), {}),
                            a = {
                                post_id: r.id,
                                from: r.from,
                                suggestion: r.suggestion,
                                feedback_type: r.feedback_type,
                                action: "docupress_ajax_feedback_suggestion",
                                _wpnonce: window.docupress_vars.nonce
                            };
                        o.append(t.$preloader.clone()), i.prop("disabled", "disabled"), s.post(window.docupress_vars.ajaxurl, a, (function (e) {
                            o.html("<div>" + e.data + "</div>").removeClass("docupress-single-feedback-suggestion-loading"), t.pendingAjax = !1
                        }))
                    }
                }
            }, {
                key: "setCache",
                value: function (e, n) {
                    n = n || !1, (e = e || !1) && n && !this.cache[e] && (this.cache[e] = n)
                }
            }, {
                key: "getCache",
                value: function (e) {
                    return !(!(e = e || !1) || !this.cache[e]) && this.cache[e]
                }
            }, {
                key: "renderDoc",
                value: function (e) {
                    var n = this.getCache(e);
                    this.$singleAjax.html(n.doc), s("title").text(n.title), s(".wp-admin-bar-edit .ab-item").attr("href", e);
                    var t = s(".docupress-single")[0].getBoundingClientRect().top;
                    t < 0 && this.$document.scrollTop(this.$document.scrollTop() + t), this.initAnchors(), this.$document.trigger("docupress_ajax_loaded", n)
                }
            }, {
                key: "onDocLinksClick",
                value: function (e) {
                    var n = e.currentTarget;
                    e.which > 1 || e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || window.location.protocol === n.protocol && window.location.hostname === n.hostname && (n.href.indexOf("#") > -1 && this.stripHash(n.href) === this.stripHash(window.location.href) || "file:" !== window.location.protocol && (e.isDefaultPrevented() || (e.preventDefault(), this.loadDocPage(n.href))))
                }
            }, {
                key: "loadDocPage",
                value: function (e) {
                    var n = this;
                    if ((e = e || !1) && n.stripHash(e) !== n.stripHash(window.location.href)) {
                        var t = n.getCache(e);
                        if (t) return n.renderDoc(e), void window.history.pushState(null, t.title, e);
                        n.xhr && n.xhr.abort && (n.xhr.abort(), n.xhr = {});
                        var o = n.$singleAjax.addClass("docupress-single-ajax-loading");
                        o.find(".docupress-single-content").append(n.$preloader.clone()), n.xhr = s.ajax({
                            url: e,
                            success: function (t) {
                                if (t) {
                                    var i = s("<div>").html(t),
                                        r = i.find("title:eq(0)").text() || document.title,
                                        a = i.find(".docupress-single-ajax").html();
                                    a ? (n.setCache(e, {
                                        href: e,
                                        title: r,
                                        doc: a,
                                        html: t
                                    }), n.renderDoc(e), window.history.pushState(null, r, e), i.remove(), i = null, o.removeClass("docupress-single-ajax-loading")) : window.location = e
                                } else window.location = e
                            },
                            error: function (n) {
                                0 !== n.status ? console.log("error", n) : window.location = e, o.removeClass("docupress-single-ajax-loading")
                            }
                        })
                    }
                }
            }]) && t(n.prototype, o), i && t(n, i), e
        }();
    s((function () {
        new o
    }))
}]);